sudo: required

language: php

matrix:
  include:
    - php: '5.6'
      env: WORDPRESS_VERSION="5.2.2" WOOCOMMERCE_VERSION="3.8.1" PHP_VERSION="5.6" ZIP_BUILD="true"
    - php: '5.6'
      env: WORDPRESS_VERSION="4.9.10" WOOCOMMERCE_VERSION="3.6.5" PHP_VERSION="5.6"
    - php: '7.2'
      env: WORDPRESS_VERSION="5.2.2" WOOCOMMERCE_VERSION="3.6.5" PHP_VERSION="7.2"
    - php: '7.2'
      env: WORDPRESS_VERSION="4.9.10" WOOCOMMERCE_VERSION="3.8.1" PHP_VERSION="7.2"
    - php: '7.2'
      env: WORDPRESS_VERSION="5.4.2" WOOCOMMERCE_VERSION="4.3.0" PHP_VERSION="7.2"
    - php: '7.3'
      env: WORDPRESS_VERSION="5.2.2" WOOCOMMERCE_VERSION="3.9.3" PHP_VERSION="7.3"
    - php: '7.4'
      env: WORDPRESS_VERSION="5.4.2" WOOCOMMERCE_VERSION="4.0.1" PHP_VERSION="7.4"
    - php: '7.4'
      env: WORDPRESS_VERSION="5.4.2" WOOCOMMERCE_VERSION="4.1.0" PHP_VERSION="7.4"

services:
  - docker

cache:
  directories:
    - $HOME/.composer/cache/files
    - $HOME/.npm
#    - $TRAVIS_BUILD_DIR/vendor

addons:
  hosts:
    - wp.test
  artifacts:
    paths:
      - $(ls tests/_output/*.html | tr "\n" ":")
      - $(ls build/*.zip | tr "\n" ":")
    target_paths:
      - /${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}
    permissions: public-read

before_install:
  # workaround for travis ipv6 timeout issue
  - sudo sh -c "echo 'precedence ::ffff:0:0/96 100' >> /etc/gai.conf"
  - echo '{"ipv6":true,"fixed-cidr-v6":"2001:db8:1::/64"}' | sudo tee /etc/docker/daemon.json
  - sudo service docker restart
  - composer self-update --1
  - composer config -g repo.packagist composer https://packagist.phpcomposer.com
  # Disable services enabled by default
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  - sudo apt-get install sshpass
  - nvm install 10.11.0
  - node -v
  - npm install -g npm@latest
  - npm install -g gulp-cli
  - make ci_before_install
  - make ensure_pingable_hosts
  # Make Composer binaries available w/o the vendor/bin prefix.
  - export PATH=vendor/bin:$PATH
  - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi

install:
  - make ci_install

before_script:
  - make ci_before_script

script:
  - make ci_script

before_deploy:
  - make build

deploy:
  provider: script
  script: bin/deploy.sh
  skip_cleanup: true
  on:
    tags: true
    condition: $ZIP_BUILD = "true"
